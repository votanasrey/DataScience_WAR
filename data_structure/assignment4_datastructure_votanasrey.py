# -*- coding: utf-8 -*-
"""Assignment4_DataStructure_VotanaSREY.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Os2r2P1pn2j6xyaADTjxhICL7VlQAJYH

# <center>Assignment 4
"""

from google.colab import drive
drive.mount('/content/drive')

"""Name: Votata SREY

# Part 1

**In part 1 you need to work with data from the about 120 years of Olympic history by pandas. Write code and perform computations in the cells below. There are five questions.**

Download the file `athlete_events.csv` from [here](https://www.kaggle.com/datasets/heesoo37/120-years-of-olympic-history-athletes-and-results). The dataset has the following features:

- __ID__ - Unique number for each athlete
- __Name__ - Athlete's name
- __Sex__ - M or F
- __Age__ - Integer
- __Height__ - In centimeters
- __Weight__ - In kilograms
- __Team__ - Team name
- __NOC__ - National Olympic Committee 3-letter code
- __Games__ - Year and season
- __Year__ - Integer
- __Season__ - Summer or Winter
- __City__ - Host city
- __Sport__ - Sport
- __Event__ - Event
- __Medal__ - Gold, Silver, Bronze, or NA
"""

import pandas as pd
import numpy as np

PATH = '/content/drive/MyDrive/Classroom/MIS 512 Section 1 (AY 2023-2024)/Assignment_4/athlete_events.csv'
athletes_data = pd.read_csv(PATH)
athletes_data.head()

"""**1**. How old were the oldest male and female participants of the 2012 Olympics?"""

olympics_2012 = athletes_data[athletes_data['Year'] == 2012]
oldest_male_2012 = olympics_2012[olympics_2012['Sex'] == 'M']['Age'].max()
oldest_female_2012 = olympics_2012[olympics_2012['Sex'] == 'F']['Age'].max()

print("**"*100)
print("Oldest Atheltes Male : ", oldest_male_2012)
print("Oldest Atheltes Female : ", oldest_female_2012)
print("**"*100)

"""__2. What are the mean and standard deviation of height for male basketball players who participated in the 1992 Olympics? Round the answer to the first decimal.__"""

basketball_1992_men = athletes_data[(athletes_data['Year'] == 1992) &
                                    (athletes_data['Sex'] == 'M') &
                                    (athletes_data['Sport'] == 'Basketball')]

mean_height = basketball_1992_men['Height'].mean()
std_dev_height = basketball_1992_men['Height'].std()

mean_height_rounded = round(mean_height, 1)
std_dev_height_rounded = round(std_dev_height, 1)

print("**"*100)
print("Male Basketball Average (Height) : ", mean_height_rounded)
print("Male Basketball Standard Deviation (Height) : ", std_dev_height_rounded)
print("**"*100)

"""__3. How many times did Christine Jacoba Aaftink participate in the Olympics held in different years?__"""

player_filter = 'Christine Jacoba Aaftink'
aaftink_data = athletes_data[athletes_data['Name'] == player_filter]

unique_years = aaftink_data['Year'].unique()
participation_count = len(unique_years)

print("**"*100)
print("The ", player_filter, " Have participanted in the Olympics in ", participation_count, " Times within these ", unique_years, " years")
print("**"*100)

"""__4. Is it true that China won fewer medals than Russia at the 2012 Olympics? Do not consider NaN values in Medal column.__"""

china_medals_2012 = olympics_2012[(olympics_2012['Team'] == 'China') & (olympics_2012['Medal'].notna())]
russia_medals_2012 = olympics_2012[(olympics_2012['Team'].str.contains('Russia')) & (olympics_2012['Medal'].notna())]

china_medal_count = china_medals_2012['Medal'].count()
russia_medal_count = russia_medals_2012['Medal'].count()

if china_medal_count < russia_medal_count:
  print("**"*100)
  print("Yes it is true, the china has won fewer medals than Russia")
  print("**"*100)
else:
  print("**"*100)
  print("Yes it is NOT True")
  print("**"*100)

"""__5. What is the absolute difference between the number of unique sports at the 1986 Olympics and 2016 Olympics?__"""

# based on the dataset, there is no 1986 Olympic, professor. So I will analyze on the 1896 instead of that.

unique_olympic_years = athletes_data['Year'].unique()
unique_olympic_years.sort()
print( "These are the year of Olympics helds, there is no 1986. \n\n" , unique_olympic_years)
print("\n\n")

olympics_1896_sports = athletes_data[athletes_data['Year'] == 1896]['Sport'].unique()
olympics_2016_sports = athletes_data[athletes_data['Year'] == 2016]['Sport'].unique()
unique_sports_1896 = len(olympics_1896_sports)
unique_sports_2016 = len(olympics_2016_sports)

absolute_difference_sports = abs(unique_sports_1896 - unique_sports_2016)
unique_sports_1896, unique_sports_2016, absolute_difference_sports

print("**"*100)
print("So these are the absolute different between number of unique sports at the 1896 and 2016 : \n\n")
print("##"*30)
print("The unique sports in 1896: ", unique_sports_1896)
print("The unique sports in 2016: ", unique_sports_2016)
print("The absolute different between number of unique sports at the 1896 and 2016: ", absolute_difference_sports)
print("**"*100)

"""# Part 2

**In part 2 you need to work with numpy library. Write code and perform computations in the cells below. There are five questions.**
"""

import numpy as np

"""__6. Create a 5x5 matrix with row values ranging from 0 to 4__"""

matrix = np.tile(np.arange(0, 5), (5, 1))
matrix

"""__7. Create a random vector of size 10 and sort it__"""

random_vector = np.random.random(10)
sorted_vector = np.sort(random_vector)

sorted_vector

"""__8. Create a structured array with x and y coordinates covering the [0,1]x[0,1] area__"""

Z = np.zeros((10,10), [('x', float), ('y', float)])
Z['x'], Z['y'] = np.meshgrid(np.linspace(0, 1, 10), np.linspace(0, 1, 10))
print(Z)

"""__9. Consider two random array A and B, check if they are equal__"""

A = np.random.rand(3, 3)
B = np.random.rand(3, 3)

arrays_equal = np.array_equal(A, B)
if arrays_equal == True:
  print("**"*100)
  print("Yes array A and B are equal")
  print("**"*100)
else:
  print("**"*100)
  print("No, array A and B are NOT equal")
  print("**"*100)

"""__10. Create a random matrix and swap two rows of an array?__"""

random_matrix = np.random.rand(4, 4)

print("**"*100)
print("Original Array \n")
print(random_matrix)
print("**"*100)

print("\n\n Swaping .... \n\n")
random_matrix[[1, 3]] = random_matrix[[3, 1]]


print("**"*100)
print("Swapping two rows of an array of 1 and 3\n")
print(random_matrix)
print("**"*100)

